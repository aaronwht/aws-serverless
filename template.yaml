AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Environment:
      Variables:
        ENVIRONMENT: 'localhost'
        DYNAMODB_ENDPOINT: http://docker.for.mac.host.internal:8000
        REGION: 'us-west-2'
Resources:
  Index:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs10.x
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
  GetPerson:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getPerson
      Runtime: nodejs10.x
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /person/{id}
            Method: get
  AddPerson:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.addPerson
      Runtime: nodejs10.x
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /add
            Method: post
  UpdatePerson:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.updatePerson
      Runtime: nodejs10.x
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /update
            Method: post
  DeletePerson:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.deletePerson
      Runtime: nodejs10.x
      Policies: AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /delete
            Method: post
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Path: /

  PersonsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Persons"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema:
        - AttributeName: "personKey"
          KeyType: "HASH"
      AttributeDefinitions:
        - AttributeName: "personKey"
          AttributeType: "S"